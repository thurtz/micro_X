# **3. AI Features**

The core of micro_X is its ability to integrate AI to translate, validate, and explain commands.

## **AI Translation (/ai command)**

To translate a natural language query into a shell command, prefix your query with /ai.

1. Type /ai followed by your request.  
   * *Example*: /ai show me all files larger than 10MB in the current directory  
   * *Example*: /ai what is my current IP address  
2. Press **Enter**.  
3. micro_X will send your query to the AI, which will attempt to translate it into a valid command.

## **Command Confirmation Flow**

For any command generated by the AI, you will be prompted to confirm its execution. This is a critical safety feature.  
ðŸ¤– AI proposed command (from: /ai your query \-> suggested_command):  
ðŸ‘‰ suggested_command  
Action: \[Y\]es | \[Ys\] Simple & Run | \[Ym\] Semi-Interactive & Run | \[Yi\] TUI & Run | \[E\]xplain | \[M\]odify | \[C\]ancel?  
\[Confirm AI Cmd\] Choice (Y/Ys/Ym/Yi/E/M/C):

Your options are:

* **\[Y\]es**: Execute the command. If the command is new, you'll be asked to categorize it next.  
* **\[Ys\] / \[Ym\] / \[Yi\]**: Execute the command AND categorize it as simple, semi_interactive, or interactive_tui respectively.  
* **\[E\]xplain**: Ask the AI to explain what the command does. You will be prompted again to confirm after the explanation.  
* **\[M\]odify**: Load the suggested command into the input field, allowing you to edit it before execution.  
* **\[C\]ancel**: Abort the execution. The command will not run.

## **AI-Powered Validation**

When you type a command that micro_X hasn't seen before, it will first use an AI model to validate whether the input is a plausible command or a natural language phrase.

* If it looks like a command, it proceeds to the categorization flow.  
* If it looks like a phrase, micro_X will attempt to translate it as if you had used the /ai prefix, triggering the command confirmation flow.